================================================================================
                                                           *blockformatter.nvim*

1. Commands                                            *blockformatter-commands*

blockformatter.nvim is a plugin for formatting block text.
Development is in progress.

BlockFormatterNormalize {col}                          *BlockFormatterNormalize*
    Formats a block of text to wrap at the specified column.

    Requires an argument -- the column number to wrap at. May be passed a count
    argument to indicate the number of lines from the cursor to normalize.

BlockFormatterNormalizeRange {col}                *BlockFormatterNormalizeRange*
    Format a visual selection to a target column width.

    Requires an argument -- the column number to wrap at.

BlockFormatterComment                                    *BlockFormatterComment*
    Toggles a leading comment for the line.

    May be passed a count argument to indicate the number of lines from the
    cursor to comment.

BlockFormatterCommentRange                          *BlockFormatterCommentRange*

    Toggles a leading comment for a visual range.

BlockFormatterAlign                                        *BlockFormatterAlign*
    Formats trailing content (designated by a token) to be in the same column.

    Pass a count argument to indicate the number of lines from the cursor to
    align. Ensure the cursor is over the token you wish to line up.

BlockFormatterAlignRange                              *BlockFormatterAlignRange*
    Formats trailing content (designated by a token) to be in the same column.

    Takes a range to format. Useful for continuing over lines that don't have
    a token. Ensure the cursor is on the token you wish to line up.

BlockFormatterAlignAuto                                *BlockFormatterAlignAuto*
    Formats trailing content (designated by a token) to be in the same column.

    Automatically detects the range to format - grabs the current line onward
    until  a line without the token is found. Ensure the cursor is on the token
    you wish to line up.
================================================================================
1. Options                                              *blockformatter-options*


g:prefer_wrapping_comments                          *g:prefer_wrapping_comments*
type: |Number|
default: `0`

For filetypes that support both line comments and wrapping comments, set to `1`
to prefer wrap-style comments

Example: C has `//` and `/* */`.
Set to `0` (default) would yield:
`// <line>`
Set to `1` would yield:
`/* <line> */`
================================================================================









































